
持续更新中。。。。。

git add              将文件从工作区添加到暂存区

git commit -m "****" 提交文件到 master分支中

git relog            查看操作的版本号，用作回退
git reset --hard 版本号   恢复到某一版本

git checkout -- 文件名  撤销工作区中文件的 修改
git reset HEAD 文件名   恢复到最新版本（可以用作撤销寄存区的修改，回到工作区）

git remote add origin git@github.com:yangyajun203/learngit.git
(添加远程库，original是库名，learngit是github上创建的库名)

git push -u origin master   将本地库的所有内容推送到远程库中

git pull --rebase origin master 将远程库中的文件同步到本地库中
（使用 git push 前可以使用）

git clone git@github.com:yangyajun203/learngit.git
克隆远程库到本地（好用，用于下载公用资源）


Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>



合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。

修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；
当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。


开发一个新feature，最好新建一个分支；
如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。